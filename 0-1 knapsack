t=int(input())
k=0
while(t):
    print("#testcase {}.format(k+1))
    n=int(input())
    W=int(input())
    v=list (map(int, input().split()))
    wt=list (map(int, input().split()))
    dp=[[0]*(W+1) for i in range (n+1)]
    for i in range(n+1):
        for j in range(W+1):
            if i==0 or j==0:
                dp[i][j]=0
            elif wt[i-1]<=j:
            # we will choose max of either previous element or current element value+ precalculated value stored in table
            # by subtracting wt[i-1] from j
                dp[i][j]=max(v[i-1]+dp[i-1][j-wt[i-1]], dp[i-1][j])
            else:
                dp[i][j]=dp[i-1][j]
    print(dp[-1][-1])
    t=t-1
    k=k+1
    
    #link-> https://www.geeksforgeeks.org/0-1-knapsack-problem-dp-10/
    #yt->   https://www.youtube.com/watch?v=8LusJS5-AGo
